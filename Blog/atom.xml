<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[李小争]]></title>
  <link href="http://www.citynight.cn/Blog/atom.xml" rel="self"/>
  <link href="http://www.citynight.cn/Blog/"/>
  <updated>2016-11-12T18:48:13+08:00</updated>
  <id>http://www.citynight.cn/Blog/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im">MWeb</generator>

  
  <entry>
    <title type="html"><![CDATA[Swift - 字典中的增删改,遍历与合并]]></title>
    <link href="http://www.citynight.cn/Blog/14789481799893.html"/>
    <updated>2016-11-12T18:56:19+08:00</updated>
    <id>http://www.citynight.cn/Blog/14789481799893.html</id>
    <content type="html"><![CDATA[
<p>增删改</p>

<pre><code>var dict:[String:Any] = [&quot;name&quot; : &quot;小明&quot;, &quot;age&quot; : 18, &quot;sex&quot;:&quot;man&quot;]

// 新增
dict[&quot;title&quot;] = &quot;老大&quot;
print(dict)

// 修改
dict[&quot;name&quot;] = &quot;赵四&quot;
print(dict)

// 删除
dict.removeValue(forKey: &quot;age&quot;)
print(dict)

</code></pre>

<p>遍历,合并</p>

<pre><code>// 遍历
for e in dict {
    print(e)
}

for (k,v) in dict {
    print(&quot;key:\(k)  value:\(v)&quot;)
}
// 合并
var dict1:[String:Any] = [&quot;name&quot; : &quot;李明&quot;, &quot;age&quot; : 18, &quot;sex&quot;:&quot;m&quot;]
var dict2:[String:Any] = [&quot;name&quot; : &quot;韩梅梅&quot;, &quot;age&quot; : 16, &quot;sex&quot;:&quot;w&quot;]
// 如果把 dict2 合并到 dict1
for e in dict2 {
    dict1[e.key] = e.value   //dict2[e.key]
}
print(&quot;----------\n\(dict1)&quot;)

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swift - 数组中的增删改与合并]]></title>
    <link href="http://www.citynight.cn/Blog/14789459811464.html"/>
    <updated>2016-11-12T18:19:41+08:00</updated>
    <id>http://www.citynight.cn/Blog/14789459811464.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>第一篇写了数组遍历的几种情况,这篇主要就是数组中的增删改,也是开发中常用的</p>
</blockquote>

<p>OC中数组分为可变(NSMutableArray)和不可变(NSArray) 相应的在Swift中就是 var &amp; let</p>

<h2 id="toc_0">追加元素</h2>

<p>首先定义一个可变数组</p>

<pre><code>var array = [&quot;张三&quot;,&quot;李四&quot;,&quot;王五&quot;]
</code></pre>

<p>追加一个元素</p>

<pre><code>// 追加元素
array.append(&quot;赵六&quot;)
print(array)
</code></pre>

<h2 id="toc_1">修改元素</h2>

<p>通过下标进行修改</p>

<pre><code>array[0] = &quot;赵四&quot;
print(array)
</code></pre>

<p>结果:</p>

<pre><code>[&quot;赵四&quot;, &quot;李四&quot;, &quot;王五&quot;, &quot;赵六&quot;]
</code></pre>

<h2 id="toc_2">删除</h2>

<pre><code>// 删除元素
array.remove(at: 0)
print(array)
</code></pre>

<p>结果:</p>

<pre><code>[&quot;赵四&quot;, &quot;李四&quot;, &quot;王五&quot;, &quot;赵六&quot;]
[&quot;李四&quot;, &quot;王五&quot;, &quot;赵六&quot;]
</code></pre>

<p>remove 的方法由很多,移除首/尾,移除范围&hellip;</p>

<pre><code>array.removeAll(keepingCapacity: true)
print(&quot;数组中的元素\(array) 数组容量\(array.capacity)&quot;)
</code></pre>

<p>结果:</p>

<pre><code>数组中的元素[] 数组容量6
</code></pre>

<h2 id="toc_3">数组合并</h2>

<pre><code>var arr0 = [1,2,3]
let arr1 = [3,4,5]
arr0 += arr1
print(arr0)
</code></pre>

<p>结果:</p>

<pre><code>[1, 2, 3, 3, 4, 5]
</code></pre>

<p>注意: 要合并的数组的类型必须一致,如果不一致会出错. 比如:</p>

<pre><code>var arr0:[Any] = [1,2,3]
let arr1:[Any] = [&quot;2&quot;,3,4,5]
arr0 += arr1
print(arr0)
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Swift - 数组遍历]]></title>
    <link href="http://www.citynight.cn/Blog/14789442794521.html"/>
    <updated>2016-11-12T17:51:19+08:00</updated>
    <id>http://www.citynight.cn/Blog/14789442794521.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>最近没怎么更新,主要是最近刚入职新公司.正在熟悉环境中&hellip; 好了题目是<code>Swift - 数组遍历</code> 主要是项目要使用 Swift 开发,所以需要熟悉下语法.</p>
</blockquote>

<h2 id="toc_0">传统的下标遍历方法</h2>

<pre><code>let array = [&quot;张三&quot;,&quot;李四&quot;,&quot;王五&quot;]

// 第一种 下标遍历
for i in 0..&lt;array.count {
    print(array[i])
}
</code></pre>

<h2 id="toc_1">for in 遍历元素</h2>

<pre><code>// 第二种 for in 遍历元素
for s in array {
    print(s)
}
</code></pre>

<h2 id="toc_2">enum block遍历</h2>

<pre><code>// 第三种 enum block 遍历
for e in array.enumerated() {
    print(e)
}
</code></pre>

<p>结果:</p>

<pre><code>(0, &quot;张三&quot;)
(1, &quot;李四&quot;)
(2, &quot;王五&quot;)
</code></pre>

<p>我们可以看下e的类型&ndash;元组<br/>
<img src="media/14789442794521/14789449636069.jpg" alt=""/></p>

<h2 id="toc_3">元组方法遍历下标和内容</h2>

<p>由上面第三种方法我们可以知道 e 的类型是元组,那么同样我们可以直接使用元组</p>

<pre><code>// 第四种 元组使用
for (n,s) in array.enumerated() {
    print(&quot;\(n) \(s)&quot;)
}
</code></pre>

<p>结果:</p>

<pre><code>0 张三
1 李四
2 王五
</code></pre>

<h2 id="toc_4">反序遍历</h2>

<pre><code>// 第五种 反序遍历
for i in array.reversed() {
    print(i)
}
</code></pre>

<p>结果</p>

<pre><code>王五
李四
张三
</code></pre>

<h2 id="toc_5">反序遍历 带索引</h2>

<pre><code>// 第六种 反序遍历 带索引
for (n,s) in array.enumerated().reversed() {
    print(&quot;\(n) \(s)&quot;)
}
</code></pre>

<p>结果:</p>

<pre><code>2 王五
1 李四
0 张三
</code></pre>

<p>注意: <strong>先枚举再反序</strong></p>

<p>总结:Swift 太灵活了&hellip;</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[会议记录(培训)]]></title>
    <link href="http://www.citynight.cn/Blog/14787398225011.html"/>
    <updated>2016-11-10T09:03:42+08:00</updated>
    <id>http://www.citynight.cn/Blog/14787398225011.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Scrum 快速迭代与反馈</h2>

<p>快速迭代得到用户的反馈</p>

<h2 id="toc_1">scrum概念</h2>

<p>敏捷宣言:个体与交互 高于 流程与工具<br/>
工作的软件 高于 详尽的文档<br/>
客户合作 高于 合同谈判<br/>
相应变化 高于 遵循计划</p>

<p>在短时间内交付组稿价值的</p>

<p>Scrum框架  3 3 5 5</p>

<h3 id="toc_2">3个角色</h3>

<h4 id="toc_3">PO(Product owner)产品经理</h4>

<ul>
<li>一个人</li>
<li>产品决策</li>
<li>驱动产品走向成功</li>
<li>客户与团队的桥梁(双向的代表)</li>
<li>建立意愿</li>
<li>负责&quot;做什么&quot;</li>
<li>对Product Backlog 排优先级   (故事来表达条目,如果有其他的也可以)</li>
<li>决定发布日期</li>
<li>接受和退回工作成果</li>
</ul>

<h4 id="toc_4">开发团队  &ndash;&gt; 规模 = 7+-2</h4>

<p>能力:职能全(编码/测试),团队做一个项目<br/>
 职责:产品增量(完整的可以上线的产品)<br/>
 持续自我改进:所有成员都要有</p>

<h4 id="toc_5">SM(Sturm Master)</h4>

<ul>
<li>管理层与团队的桥梁(双向代表)</li>
<li>帮助团队做决定,自己不做决定</li>
<li>团队内部教练</li>
<li>开放并善于聆听</li>
<li>营造和推进Scrum价值观</li>
<li>帮助团队移除障碍</li>
<li>为PO和团队服务</li>
<li>培养和保护团队  保护团队不受打扰</li>
<li>提升管队效率</li>
</ul>

<h3 id="toc_6">3个工件(过程成果和交付物)</h3>

<h4 id="toc_7">Product Backlog</h4>

<ul>
<li>动态列表,包含产品功能(用户故事:)</li>
<li>其他能给用户带来的价值的工作(技术故事:一般由主设计由产品经理确认)</li>
<li>好的Product Backlog <strong>详细,规模估算,涌现式,优先级(绝对序号排序,不要用高中低)</strong></li>
<li>PO维护</li>
</ul>

<h4 id="toc_8">Sprint backlog</h4>

<ul>
<li>基于product backlog 拆分成更小的任务.关注与怎么做的问题</li>
<li><p>开发团队负责创建与维护</p>

<p><em>1</em> 选取要进行的Product backlog Item<br/>
<em>2</em> 协作完成<br/>
<em>3</em> 通过scrum任务版让团队自我管理Sprint Backlog<br/>
<em>4</em> 通过燃尽图跟踪sprint进展情况并预测和管理开发的进展</p>

<h4 id="toc_9">Sprint产品增量</h4></li>
<li><p>项目有一些列 sprint 组成</p></li>
<li><p>通常2-4周</p></li>
<li><p>固定周期    &ndash;&gt; 让开发团队适应节奏</p></li>
<li><p>时间盒结束sprint结束</p></li>
<li><p>计划会定义的工作要在sprint内全部完成</p></li>
</ul>

<h3 id="toc_10">5个活动</h3>

<h4 id="toc_11">Sprint计划会</h4>

<ul>
<li>第一部分:定义目标,选择可以承诺完成的任务(例如:主流程能跑通)</li>
<li>第二部分:决定如何实现目标,创建Sprint backlog估算(故事清单,按清单做)
####Daily Scrum 每日站立会</li>
<li>每日</li>
<li>相同时间地点</li>
<li>15分钟</li>
<li>站立 时间端,累 注意力集中</li>
<li>团队,+SM,PO</li>
</ul>

<h4 id="toc_12">迭代评审会</h4>

<ul>
<li>展示工作成果,获得客户反馈</li>
<li>PO接受或者回退工作</li>
<li>团队成员全部参家</li>
<li>邀请相关干系人</li>
</ul>

<h4 id="toc_13">迭代回顾会</h4>

<ul>
<li>团队开发过程会持续改进</li>
<li>最长3小时</li>
<li>全员参加,领导可以不参加</li>
<li>敏捷教练或者SM带领大家回顾</li>
<li>形成明确的改进计划,并在下一个迭代会回顾会检视效果</li>
</ul>

<h4 id="toc_14">把Scrum本身也做为一个活动</h4>

<h3 id="toc_15">5个价值观</h3>

<h2 id="toc_16">scrum拆解</h2>

<h1 id="toc_17">案例</h1>

<h2 id="toc_18">1.团队要敏捷,从哪里开始</h2>

<h3 id="toc_19">准备阶段</h3>

<p>团队组件:PO,SM(敏捷教练),开发团队(开发和测试不要很明确)</p>

<h3 id="toc_20">项目启动会</h3>

<h2 id="toc_21">2.git支管理办法</h2>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[安装tree命令]]></title>
    <link href="http://www.citynight.cn/Blog/14781615036446.html"/>
    <updated>2016-11-03T16:25:03+08:00</updated>
    <id>http://www.citynight.cn/Blog/14781615036446.html</id>
    <content type="html"><![CDATA[
<p><code>brew</code> 一行命令搞定 <code>brew install tree</code></p>

<p>效果图:</p>

<pre><code>.
├── LICENSE
├── MKShowDetail
│   ├── MKShowDetail.h
│   ├── XZBaseViewController.h
│   ├── XZBaseViewController.m
│   ├── XZBaseViewController.xib
│   ├── XZCustomViewController.h
│   ├── XZCustomViewController.m
│   ├── XZTableView.h
│   ├── XZTableView.m
│   └── bgImage.gif
├── MKShowDetail.podspec
├── MKShowDetailDemo
│   ├── DetailShow
│   │   ├── AppDelegate.h
│   │   ├── AppDelegate.m
│   │   ├── Assets.xcassets
│   │   │   ├── AppIcon.appiconset
│   │   │   │   └── Contents.json
│   │   │   ├── Contents.json
│   │   │   └── icon.imageset
│   │   │       ├── Contents.json
│   │   │       └── icon.jpg
│   │   ├── Base.lproj
│   │   │   ├── LaunchScreen.storyboard
│   │   │   └── Main.storyboard
│   │   ├── Info.plist
│   │   ├── OneViewController.h
│   │   ├── OneViewController.m
│   │   ├── TestViewController.h
│   │   ├── TestViewController.m
│   │   ├── ThreeViewController.h
│   │   ├── ThreeViewController.m
│   │   ├── TwoViewController.h
│   │   ├── TwoViewController.m
│   │   ├── ViewController.h
│   │   ├── ViewController.m
│   │   ├── lol.jpg
│   │   ├── main.m
│   │   └── timo.jpg
│   └── DetailShow.xcodeproj
│       ├── project.pbxproj
│       ├── project.xcworkspace
│       │   ├── contents.xcworkspacedata
│       │   └── xcuserdata
│       │       ├── mekor.xcuserdatad
│       │       │   └── UserInterfaceState.xcuserstate
│       │       └── weizhi.xcuserdatad
│       │           └── UserInterfaceState.xcuserstate
│       └── xcuserdata
│           ├── mekor.xcuserdatad
│           │   └── xcschemes
│           │       ├── DetailShow.xcscheme
│           │       └── xcschememanagement.plist
│           └── weizhi.xcuserdatad
│               ├── xcdebugger
│               │   └── Breakpoints_v2.xcbkptlist
│               └── xcschemes
│                   ├── DetailShow.xcscheme
│                   └── xcschememanagement.plist
├── README.md
└── shopdetail.gif

</code></pre>

<p>看起来效果不错.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[获取当前显示的UIViewController]]></title>
    <link href="http://www.citynight.cn/Blog/14781433227076.html"/>
    <updated>2016-11-03T11:22:02+08:00</updated>
    <id>http://www.citynight.cn/Blog/14781433227076.html</id>
    <content type="html"><![CDATA[
<pre><code>+ (UIViewController *)getCurrentRootViewController {

    CommonTool *tool = [[CommonTool alloc]init];

    UIViewController *result;
    UIWindow *topWindow = [[UIApplication sharedApplication] keyWindow];

    if (topWindow.windowLevel != UIWindowLevelNormal){
        NSArray *windows = [[UIApplication sharedApplication] windows];
        for(topWindow in windows){
            if (topWindow.windowLevel == UIWindowLevelNormal)
                break;
        }
    }

    UIView *rootView = [topWindow subviews].firstObject;
    id nextResponder = [rootView nextResponder];

    if ([nextResponder isMemberOfClass:[UIViewController class]]){
        result = nextResponder;
    }
    else if ([nextResponder isMemberOfClass:[UITabBarController class]] | [nextResponder isMemberOfClass:[UINavigationController class]]){
        result = [tool findViewController:nextResponder];
    }
    else if ([topWindow respondsToSelector:@selector(rootViewController)] &amp;&amp; topWindow.rootViewController != nil){
        result = topWindow.rootViewController;
    }

    else{
        NSAssert(NO, @&quot;找不到顶端VC&quot;);
    }
    return result;
}

</code></pre>

<pre><code>- (UIViewController *)findViewController:(id)controller{
    if ([controller isMemberOfClass:[UINavigationController class]]) {
        return [self findViewController:[(UINavigationController *)controller visibleViewController]];
    }
    else if ([controller isMemberOfClass:[UITabBarController class]]){
        return [self findViewController:[(UITabBarController *)controller selectedViewController]];
    }
    else if ([controller isKindOfClass:[UIViewController class]]){
        return controller;
    }
    else{
        NSAssert(NO, @&quot;找不到顶端VC&quot;);
        return nil;
    }
}

</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何获取手机上安装的所有App]]></title>
    <link href="http://www.citynight.cn/Blog/14778331858080.html"/>
    <updated>2016-10-30T21:13:05+08:00</updated>
    <id>http://www.citynight.cn/Blog/14778331858080.html</id>
    <content type="html"><![CDATA[
<pre><code>#include &lt;objc/runtime.h&gt; 

Class LSApplicationWorkspace_class = objc_getClass(&quot;LSApplicationWorkspace&quot;);
NSObject* workspace = [LSApplicationWorkspace_class performSelector:@selector(defaultWorkspace)];
NSLog(@&quot;apps: %@&quot;, [workspace performSelector:@selector(allApplications)]);
</code></pre>

<p>模拟器打印结果:</p>

<pre><code>apps: (
    &quot;&lt;LSApplicationProxy: 0x7fbd34603da0&gt; com.apple.appleaccount.AACredentialRecoveryDialog file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/AACredentialRecoveryDialog.app &lt;com.apple.appleaccount.AACredentialRecoveryDialog &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd383073a0&gt; com.apple.AccountAuthenticationDialog file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/AccountAuthenticationDialog.app &lt;com.apple.AccountAuthenticationDialog &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd38308a00&gt; com.apple.AdSheetPhone file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/AdSheet.app &lt;com.apple.AdSheetPhone &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd38308df0&gt; com.apple.Bridge file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/Bridge.app &lt;com.apple.Bridge &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd38308fe0&gt; com.apple.camera file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/Camera.app &lt;com.apple.camera &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34503d80&gt; com.apple.MobileAddressBook file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/Contacts.app &lt;com.apple.MobileAddressBook &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34605980&gt; com.apple.CoreAuthUI file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/CoreAuthUI.app &lt;com.apple.CoreAuthUI &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd346062f0&gt; com.apple.DataActivation file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/DataActivation.app &lt;com.apple.DataActivation &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34606730&gt; com.apple.datadetectors.DDActionsService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/DDActionsService.app &lt;com.apple.datadetectors.DDActionsService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34606f60&gt; com.apple.FacebookAccountMigrationDialog file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/FacebookAccountMigrationDialog.app &lt;com.apple.FacebookAccountMigrationDialog &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd346074c0&gt; com.apple.gamecenter.GameCenterUIService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/GameCenterUIService.app &lt;com.apple.gamecenter.GameCenterUIService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34607b10&gt; com.apple.siri.parsec.HashtagImagesApp file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/HashtagImages.app &lt;com.apple.siri.parsec.HashtagImagesApp &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34608040&gt; com.apple.Health file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/Health.app &lt;com.apple.Health &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd346085d0&gt; com.apple.HealthPrivacyService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/HealthPrivacyService.app &lt;com.apple.HealthPrivacyService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34608f70&gt; com.apple.Home.HomeUIService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/HomeUIService.app &lt;com.apple.Home.HomeUIService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd346093c0&gt; com.apple.iad.iAdOptOut file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/iAdOptOut.app &lt;com.apple.iad.iAdOptOut &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd346095b0&gt; com.apple.CloudKit.ShareBear file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/iCloud.app &lt;com.apple.CloudKit.ShareBear &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460a060&gt; com.apple.iCloudDriveApp file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/iCloudDriveApp.app &lt;com.apple.iCloudDriveApp &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460a4b0&gt; com.apple.LoginUI file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/LoginUI.app &lt;com.apple.LoginUI &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460a9f0&gt; com.apple.MailCompositionService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/MailCompositionService.app &lt;com.apple.MailCompositionService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460ae80&gt; com.apple.Maps file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/Maps.app &lt;com.apple.Maps &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460b3e0&gt; com.apple.mobilesms.compose file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/MessagesViewService.app &lt;com.apple.mobilesms.compose &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460bb00&gt; com.apple.mobilecal file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/MobileCal.app &lt;com.apple.mobilecal &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460bf50&gt; com.apple.mobilesafari file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/MobileSafari.app &lt;com.apple.mobilesafari &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460c4e0&gt; com.apple.mobileslideshow file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/MobileSlideShow.app &lt;com.apple.mobileslideshow &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460c8d0&gt; com.apple.MobileSMS file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/MobileSMS.app &lt;com.apple.MobileSMS &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460cac0&gt; com.apple.MusicUIService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/MusicUIService.app &lt;com.apple.MusicUIService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460d520&gt; com.apple.news file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/News.app &lt;com.apple.news &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460dc70&gt; com.apple.Passbook file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/Passbook.app &lt;com.apple.Passbook &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460e0c0&gt; com.apple.PassbookUIService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/PassbookUIService.app &lt;com.apple.PassbookUIService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460e510&gt; com.apple.PhotosViewService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/PhotosViewService.app &lt;com.apple.PhotosViewService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460eaf0&gt; com.apple.Preferences file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/Preferences.app &lt;com.apple.Preferences &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460ece0&gt; com.apple.PrintKit.Print-Center file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/Print%20Center.app &lt;com.apple.PrintKit.Print-Center &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460abe0&gt; com.apple.reminders file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/Reminders.app &lt;com.apple.reminders &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460f790&gt; com.apple.SafariViewService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/SafariViewService.app &lt;com.apple.SafariViewService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd3460ffc0&gt; com.apple.ServerDocuments file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/ServerDocuments.app &lt;com.apple.ServerDocuments &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34610580&gt; com.apple.SharedWebCredentialViewService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/SharedWebCredentialViewService.app &lt;com.apple.SharedWebCredentialViewService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34610ab0&gt; com.apple.SharingViewService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/SharingViewService.app &lt;com.apple.SharingViewService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34610ca0&gt; com.apple.SiriViewService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/SiriViewService.app &lt;com.apple.SiriViewService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34610e90&gt; com.apple.social.SLGoogleAuth file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/SLGoogleAuth.app &lt;com.apple.social.SLGoogleAuth &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd345016b0&gt; com.apple.social.SLYahooAuth file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/SLYahooAuth.app &lt;com.apple.social.SLYahooAuth &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34501370&gt; com.apple.share file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/SocialUIService.app &lt;com.apple.share &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34507a80&gt; com.apple.ios.StoreKitUIService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/StoreKitUIService.app &lt;com.apple.ios.StoreKitUIService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34507c70&gt; com.apple.TencentWeiboAccountMigrationDialog file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/TencentWeiboAccountMigrationDialog.app &lt;com.apple.TencentWeiboAccountMigrationDialog &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34507e60&gt; com.apple.TrustMe file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/TrustMe.app &lt;com.apple.TrustMe &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd346123f0&gt; com.apple.VSViewService file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/VideoSubscriberAccountViewService.app &lt;com.apple.VSViewService &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34612c30&gt; com.apple.webapp file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/Web.app &lt;com.apple.webapp &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd346133b0&gt; com.apple.webapp1 file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/WebApp1.app &lt;com.apple.webapp1 &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34613fa0&gt; com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/WebContentAnalysisUI.app &lt;com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd34614930&gt; com.apple.WebSheet file:///Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/Applications/WebSheet.app &lt;com.apple.WebSheet &lt;installed &gt;&gt;&quot;,
    &quot;&lt;LSApplicationProxy: 0x7fbd346151b0&gt; cn.citynight.----- file:///Users/mekor/Library/Developer/CoreSimulator/Devices/F9CC59DD-6467-40E5-B0AE-F7EDDD22C612/data/Containers/Bundle/Application/0F126D14-F359-4D63-AEE7-B569519AC04F/%E5%85%91%E6%8D%A2%E5%88%B8%E6%B5%8B%E8%AF%95.app &lt;cn.citynight.----- &lt;installed &gt;&gt;&quot;
)

</code></pre>

<p>动态调用加上简单的混淆应该就可以了<br/>
上架要自己拼接字符串绕过审查</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[计算老虎机中奖等级-NSCountedSet]]></title>
    <link href="http://www.citynight.cn/Blog/14778318573153.html"/>
    <updated>2016-10-30T20:50:57+08:00</updated>
    <id>http://www.citynight.cn/Blog/14778318573153.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>NSCountedSet这个一直没有用过,看到其他人使用在此记录下.</p>
</blockquote>

<p>计算老虎机中奖等级的问题：老虎机有四列，每列四个图案，如果四个相同就是等级1，三个相同就是等级2，以此类推。说是用<code>if else</code>太麻烦，有没有什么比较快捷的方法，首先想到的是用KVC中剔除重复数据的办法。比如：</p>

<pre><code>NSArray *array = @[@2, @2, @2, @1];
NSLog(@&quot;%@&quot;, [array valueForKeyPath:@&quot;@distinctUnionOfObjects.self&quot;]);
</code></pre>

<p>然后得到数组的个数为2，看起来很合理，如果数组是<code>NSArray *array = @[@2, @1, @2, @1];</code>这时候计算出来的数组个数是也是2，但是正确结果应该是等级3，后来突然想起一个类:NSCountedSet</p>

<pre><code>    NSArray *array = @[@1, @2, @2, @1];
    NSCountedSet *set = [[NSCountedSet alloc]initWithArray:array];

    [set enumerateObjectsUsingBlock:^(id obj, BOOL *stop) {
        NSLog(@&quot;%@ =&gt; %d&quot;, obj, [set countForObject:obj]);
    }];

</code></pre>

<pre><code>1 =&gt; 2
2 =&gt; 2
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Qt创建桌面应用程序]]></title>
    <link href="http://www.citynight.cn/Blog/14771170894039.html"/>
    <updated>2016-10-22T14:18:09+08:00</updated>
    <id>http://www.citynight.cn/Blog/14771170894039.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p>如果Xcode8下无法正常使用Qt,解决办法参见:<a href="http://www.citynight.cn/Blog/14761943627170.html">http://www.citynight.cn/Blog/14761943627170.html</a></p>
</blockquote>

<p>最终实现的效果:<br/>
<img src="media/14771170894039/14771178501064.jpg" alt=""/></p>

<p><img src="media/14771170894039/14771179340151.jpg" alt=""/></p>

<p>选择桌面应用程序<br/>
<img src="media/14771170894039/14771179611437.jpg" alt=""/></p>

<p><img src="media/14771170894039/14771180181773.jpg" alt=""/></p>

<p>OK,现在项目创建好了&hellip;.接下来就是写代码了&hellip;</p>

<p><img src="media/14771170894039/14771173227361.jpg" alt=""/></p>

<p>然后在<code>mainwindow.cpp</code>文件中编写代码:<br/>
引入需要的头文件</p>

<pre><code>#include &lt;QPainter&gt;
#include &lt;QPen&gt;
#include &lt;math.h&gt;
</code></pre>

<p>在<code>MainWindow</code>中设置窗口位置</p>

<pre><code>    // 设置在桌面上显示的位置&amp;大小
    this-&gt;setGeometry(600,300,600,300);
</code></pre>

<pre><code>void MainWindow::paintEvent(QPaintEvent *e){
        // 定义画笔
        QPainter painter(this);

        // 定义画坐标笔的,宽度,颜色
        QPen pen;
        pen.setWidth(2);
        pen.setColor(Qt::black);

        // 设置属性生效
        painter.setPen(pen);

        // 画坐标
        painter.drawLine(0,150,600,150);
        painter.drawLine(100,0,100,300);

        //将绘画的坐标原点,转移到(100,150)的位置
        painter.translate(100,150);



        //重新设置画正弦颜色和样式

        pen.setColor(Qt::red);

        pen.setStyle(Qt::SolidLine);

        //使设置生效
        painter.setPen(pen);

        //采集 360 个点用于绘图
        QVector&lt;QPointF&gt;pVector;

        for(int i=0; i&lt;360; i++)
        {
            pVector.push_back(QPointF(i,-sin(3.14/180*i)*70));//y 轴坐标,相反

        }

        // 画多点线条
        painter.drawPolyline(pVector);
}
</code></pre>

<p>开心的run下吧..</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用 chisel 提高 LLDB 调试效率]]></title>
    <link href="http://www.citynight.cn/Blog/14766672567296.html"/>
    <updated>2016-10-17T09:20:56+08:00</updated>
    <id>http://www.citynight.cn/Blog/14766672567296.html</id>
    <content type="html"><![CDATA[
<blockquote>
<p><a href="https://github.com/facebook/chisel">https://github.com/facebook/chisel</a> 英文版使用说明</p>
</blockquote>

<h2 id="toc_0">安装</h2>

<ol>
<li>安装 <a href="http://brew.sh/index_zh-cn.html">Homebrew</a> (如果已经安装了,可以跳过这一步)</li>
</ol>

<pre><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;
</code></pre>

<ol>
<li>更新 Homebrew (如果已经最新了,可以跳过这一步)</li>
</ol>

<pre><code>brew update
</code></pre>

<ol>
<li>通过 Homebrew 安装 chisel</li>
</ol>

<pre><code>brew install chisel
</code></pre>

<ol>
<li>添加 chisel 命令至 ~/.lldbinit</li>
</ol>

<pre><code>touch ~/.lldbinit echo &quot;command script import /usr/local/opt/chisel/libexec/fblldb.py&quot; &gt;&gt; ~/.lldbinit
</code></pre>

<ol>
<li>更新 chisel</li>
</ol>

<pre><code>brew upgrade chisel
</code></pre>

<h2 id="toc_1">使用</h2>

<ol>
<li>通过 <code>pviews</code> 命令直接查看页面层级关系</li>
</ol>

<hr/>

<p>未完&hellip; </p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UITableView优化方案(收集)]]></title>
    <link href="http://www.citynight.cn/Blog/14766308131126.html"/>
    <updated>2016-10-16T23:13:33+08:00</updated>
    <id>http://www.citynight.cn/Blog/14766308131126.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">相关文章/博客</h2>

<p><a href="http://www.cocoachina.com/ios/20150906/13212.html">一次 TableView 性能优化经历</a><br/>
<a href="http://blog.jobbole.com/37984/">iOS应用性能调优的25个建议和技巧</a><br/>
<a href="http://longxdragon.github.io/2015/05/26/UITableView%E4%BC%98%E5%8C%96%E6%8A%80%E5%B7%A7/">UITableView优化技巧</a><br/>
<a href="http://blog.csdn.net/shang_ri_la/article/details/25954383">UITableView 滚动流畅性优化</a> (备注:这个原始网站挂了,幸好有朋友转载过.)</p>

<h2 id="toc_1">注意点:</h2>

<h4 id="toc_2">1. 列表卡顿问题最好真机测试，有条件的尽量选择低版本硬件和系统进行测试；</h4>

<h4 id="toc_3">2. 使用 Instruments 的 Time Profiler 工具定位造成卡顿时间消耗的位置；</h4>

<h4 id="toc_4">3. 避免 UITableView 的多次刷新( reloadData )，尤其 Xib 加载 UITableView 时避免首次自动加载；</h4>

<h4 id="toc_5">4. 为 Cell 专门定义显示 Model；</h4>

<h4 id="toc_6">5. Model 需要包含已提前计算出的 Cell 高度；</h4>

<h4 id="toc_7">6. 对于显示的 NSString，提前在 Model 中组装完成，避免在 Cell 中组装转换；</h4>

<h4 id="toc_8">7. 对于需要加载的网络图片链接，提前在 Model 中组装完成 NSURL,避免在 Cell 中组装转换；</h4>

<h4 id="toc_9">8. 尽量减少 Cell 中的逻辑判断和运算并使用正确的数据格式;</h4>

<h4 id="toc_10">9. 避免在 Cell 中反复创建 View,最好在初始化时一并创建，通过设置 Hidden 属性控制显示和隐藏;</h4>

<h4 id="toc_11">10. 对于 UIImageView ,注意加载的图片大小是否与控件大小一致，尽量保持一致；</h4>

<h4 id="toc_12">11. 正确使用 reuseIdentifier</h4>

<pre><code>static NSString *CellIdentifier = @&quot;MyFancyCell&quot;;
UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier forIndexPath:indexPath];

</code></pre>

<h4 id="toc_13">12. 尽量把所有的 UIView 以及其子类控件设置为不透明（Opaque = YES）,你可以在模拟器中用Debug\Color Blended Layers选项来发现哪些view没有被设置为opaque。目标就是，能设为opaque的就全设为opaque!</h4>

<h4 id="toc_14">13. 尽量避免图片压缩，模拟器条件下使用 Debug\Color Misaligned Images 选项检查像素是否对其:如果图片边界没有与目标像素完美对齐，该功能可为图片叠加上一层品红色。如果图片使用确定的比例大小绘制，那么该功能会为图片添加一层黄色叠加。真机条件下使用 Instrument 中的 Core Animation 工具检查；</h4>

<h4 id="toc_15">14. 使用 shadowPath 来画阴影;</h4>

<pre><code>#import &lt;QuartzCore/QuartzCore.h&gt;

// Somewhere later ...
UIView *view = [[UIView alloc] init];

// Setup the shadow ...
view.layer.shadowOffset = CGSizeMake(-1.0f, 1.0f);
view.layer.shadowRadius = 5.0f;
view.layer.shadowOpacity = 0.6;
</code></pre>

<h4 id="toc_16">15. 减少 subviews 的数量;</h4>

<h4 id="toc_17">16. 尽量不使用 cellForRowAtIndexPath: ，如果你需要用到它，只用一次然后缓存结果；</h4>

<h4 id="toc_18">17. 使用 Autorelease Pool；</h4>

<pre><code>NSArray *urls = &lt;# An array of file URLs #&gt;;
for (NSURL *url in urls) {
    @autoreleasepool {
        NSError *error;
        NSString *fileContents = [NSString stringWithContentsOfURL:url
                                         encoding:NSUTF8StringEncoding error:&amp;error];
    }
}
</code></pre>

<h4 id="toc_19">18. 选择是否需要缓存；</h4>

<pre><code>UIImage *img = [UIImage imageNamed:@&quot;myImage&quot;]; // caching

// or
 UIImage *img = [UIImage imageWithContentsOfFile:@&quot;myImage&quot;]; // no caching
</code></pre>

<p>如果你要加载一个大图片而且是一次性使用，那么就没必要缓存这个图片，用 imageWithContentsOfFile 足矣，这样不会浪费内存来缓存它。然而，在图片反复重用的情况下 imageNamed 是一个好得多的选择。</p>

<h4 id="toc_20">19. 避免日期格式转换；相关日期显示应该在 Model 中定义完成。</h4>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[UILabel边缘出现黑线]]></title>
    <link href="http://www.citynight.cn/Blog/14766298858600.html"/>
    <updated>2016-10-16T22:58:05+08:00</updated>
    <id>http://www.citynight.cn/Blog/14766298858600.html</id>
    <content type="html"><![CDATA[
<p>问题:代码实现 UILabel 时出现的边缘黑线问题<br/>
原因:当 UILabel 的宽高出现浮点型数字时,在高清屏下有可能出现右侧边缘黑线问题, 解决方法是使用 <code>CGRectIntegral()</code> 方法确保 <code>frame</code> 中不存在非整形数值</p>

<pre><code>label.frame = CGRectIntegral(CGRectMake(0, 0, ceil(width),40));
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS 模拟器 添加图片到相册的小技巧]]></title>
    <link href="http://www.citynight.cn/Blog/14765420394973.html"/>
    <updated>2016-10-15T22:33:59+08:00</updated>
    <id>http://www.citynight.cn/Blog/14765420394973.html</id>
    <content type="html"><![CDATA[
<p>把图片拖到模拟器主屏幕,或者Safari中,保存图片7 <br/>
<img src="media/14765420394973/tips.gif" alt="tips"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[字符串frame相关]]></title>
    <link href="http://www.citynight.cn/Blog/14765391593705.html"/>
    <updated>2016-10-15T21:45:59+08:00</updated>
    <id>http://www.citynight.cn/Blog/14765391593705.html</id>
    <content type="html"><![CDATA[
<p>开发中常用到计算字符串的size或者rect</p>

<p>经常见到如下接口:</p>

<pre><code>- (CGSize)sizeWithAttributes:(nullable NSDictionary&lt;NSString *, id&gt; *)attrs NS_AVAILABLE(10_0, 7_0);

- (CGRect)boundingRectWithSize:(CGSize)size options:(NSStringDrawingOptions)options attributes:(nullable NSDictionary&lt;NSString *, id&gt; *)attributes context:(nullable NSStringDrawingContext *)context NS_AVAILABLE(10_11, 7_0);
</code></pre>

<p>项目中使用的例子:</p>

<pre><code>    // shopNameLabel frame
    {
        CGSize stringSize = [self.shopNameLabel.text sizeWithAttributes:@{NSFontAttributeName: self.shopNameLabel.font}];
        self.shopNameLabel.frame = CGRectMake(margin, margin, ceil(stringSize.width), ceil(stringSize.height));
    }
</code></pre>

<pre><code>    // addressLabel frame
    {
        CGFloat lwidth = width - imageWH - 3*margin;
        
        CGSize stringSize = [self.addressLabel.text boundingRectWithSize:CGSizeMake(lwidth, self.addressLabel.font.lineHeight *self.addressLabel.numberOfLines) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName: self.addressLabel.font} context:nil].size;
        self.addressLabel.frame = CGRectMake(margin, ceil(CGRectGetMaxY(self.juliLabel.frame) + margin), stringSize.width, stringSize.height);
    }

</code></pre>

<p>由于经常使用,所以我把这些都抽取成代码块,方便调用.</p>

<p>其中由于需要预估字符串的高度,<code>boundingRectWithSize</code>,由于iOS所提供的默认字体是可能变化的,所以这里我们不能凭借经验10号字体默认高度就是10,这是不准确的.使用<code>self.addressLabel.font.lineHeight</code>应该使用行高来计算.并且显示的行数也不要写死,需要写成 <code>self.addressLabel.numberOfLines</code>.这样做才能得到想要的效果.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vim 学习]]></title>
    <link href="http://www.citynight.cn/Blog/14764220018619.html"/>
    <updated>2016-10-14T13:13:21+08:00</updated>
    <id>http://www.citynight.cn/Blog/14764220018619.html</id>
    <content type="html"><![CDATA[
<p>开发中如果遇到修改配置文件的时候经常用到 vim .今天把常用到的 vim 命令进行简单的总结</p>

<h2 id="toc_0">开始学习 vim</h2>

<p>在 terminal 中输入  <code>vimtutor -g zh</code> 就会开始 vim  学习教程 </p>

<h2 id="toc_1">简单总结</h2>

<h3 id="toc_2">vim 编辑器中有三种状态模式</h3>

<p><img src="media/14764220018619/14768675919240.jpg" alt=""/></p>

<h3 id="toc_3">vim 编辑器的启动与退出</h3>

<table>
<thead>
<tr>
<th>命令</th>
<th>释意</th>
</tr>
</thead>

<tbody>
<tr>
<td>$ vim</td>
<td>直接进入编辑环境</td>
</tr>
<tr>
<td>$ vim myfile</td>
<td>进入编辑环境并打开(新建)文件</td>
</tr>
<tr>
<td>:q</td>
<td>退出 vi 编辑环境</td>
</tr>
</tbody>
</table>

<h3 id="toc_4">文件操作</h3>

<table>
<thead>
<tr>
<th>命令</th>
<th>释意</th>
</tr>
</thead>

<tbody>
<tr>
<td>:w</td>
<td>保存对 vim 编辑器中已打开文件的修改</td>
</tr>
<tr>
<td>:w myfile</td>
<td>将 vim 编辑器中的内容另存为指定文件名</td>
</tr>
<tr>
<td>:wq</td>
<td>对 vim 编辑器中的文件进行保存并退出 vim 编辑器</td>
</tr>
<tr>
<td>:q!</td>
<td>放弃对文件内容的修改,并退出 vi 编辑器</td>
</tr>
</tbody>
</table>

<h3 id="toc_5">光标移动操作</h3>

<table>
<thead>
<tr>
<th>命令</th>
<th>光标操作</th>
<th>释意</th>
</tr>
</thead>

<tbody>
<tr>
<td>光标移动</td>
<td>h</td>
<td>向左移动光标</td>
</tr>
<tr>
<td></td>
<td>l</td>
<td>向右移动光标</td>
</tr>
<tr>
<td></td>
<td>k</td>
<td>向上移动光标</td>
</tr>
<tr>
<td></td>
<td>j</td>
<td>向下移动光标</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>翻页</td>
<td>Ctrl + f</td>
<td>向下翻整页</td>
</tr>
<tr>
<td></td>
<td>Ctrl + b</td>
<td>向上翻整页</td>
</tr>
<tr>
<td></td>
<td>Ctrl + u</td>
<td>向上翻半页</td>
</tr>
<tr>
<td></td>
<td>Ctrl + d</td>
<td>向下翻半页</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>行内移动光标</td>
<td>^</td>
<td>将光标快速跳转到本行的行首字符</td>
</tr>
<tr>
<td></td>
<td>$</td>
<td>将光标快速跳转到本行的行尾字符</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>文件内跳转</td>
<td>:set nu</td>
<td>在编辑器中显示行号</td>
</tr>
<tr>
<td></td>
<td>:set nonu</td>
<td>取消编辑器中的行号显示</td>
</tr>
<tr>
<td></td>
<td>1G(gg)</td>
<td>跳转到文件的首行</td>
</tr>
<tr>
<td></td>
<td>G</td>
<td>跳转到文件的末尾行</td>
</tr>
<tr>
<td></td>
<td>#G</td>
<td>跳转到文件中的第#行</td>
</tr>
</tbody>
</table>

<h3 id="toc_6">编辑操作</h3>

<table>
<thead>
<tr>
<th>命令</th>
<th>光标操作</th>
<th>释意</th>
</tr>
</thead>

<tbody>
<tr>
<td>进入输入模式</td>
<td>i</td>
<td>在当前光标处进入插入状态</td>
</tr>
<tr>
<td></td>
<td>a</td>
<td>在当前光标后进入插入状态</td>
</tr>
<tr>
<td></td>
<td>o</td>
<td>在当前行的下面插入新行,光标移动到新行的行首,进入插入状态</td>
</tr>
<tr>
<td></td>
<td>O</td>
<td>在当前行的上面插入新行,光标移动到新行的行首,进入插入状态</td>
</tr>
<tr>
<td></td>
<td>c(n)w</td>
<td>删除当前光标到所在单词尾部的字符,并进入插入状态</td>
</tr>
<tr>
<td></td>
<td>c$</td>
<td>删除当前光标到行尾的字符,并进入插入状态</td>
</tr>
<tr>
<td></td>
<td>c^</td>
<td>命令删除当前光标之前(不包括光标上的字符)到行首的字符,并进入插入状态</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>删除操作</td>
<td>x</td>
<td>删除光标处的单个字符</td>
</tr>
<tr>
<td></td>
<td>(n)dd</td>
<td>删除光标所 n 行</td>
</tr>
<tr>
<td></td>
<td>:3,5 d</td>
<td>删除从第 3 行到第 5 行的内容</td>
</tr>
<tr>
<td></td>
<td>dw</td>
<td>删除当前字符到单词尾(包括空格)的所有字符</td>
</tr>
<tr>
<td></td>
<td>de</td>
<td>删除当前字符到单词尾(不包括单词尾部的空格)的所有字符</td>
</tr>
<tr>
<td></td>
<td>d$</td>
<td>删除当前字符到行尾的所有字符</td>
</tr>
<tr>
<td></td>
<td>d^</td>
<td>删除当前字符到行首的所有字符</td>
</tr>
<tr>
<td></td>
<td>J(大写)</td>
<td>删除光标所在行行尾的换行符,相当于合并当 前行和下一行的内容</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>拷贝和粘贴</td>
<td>(n)yy</td>
<td>复制当前行整行的内容到 vi 缓冲区</td>
</tr>
<tr>
<td></td>
<td>:3,6 co(m) 12</td>
<td>复制(剪切)3-6 行,到第 12 行处</td>
</tr>
<tr>
<td></td>
<td>p</td>
<td>读取 vi 缓冲区中的内容,并粘贴到光标当前的位置(不覆盖文件已有的内容)</td>
</tr>
<tr>
<td></td>
<td>u</td>
<td>取消最近一次的操作,并恢复操作结果可以多次使用 u命令恢复已进行的多步操作</td>
</tr>
<tr>
<td></td>
<td>U</td>
<td>取消对当前整行进行的所有操作</td>
</tr>
<tr>
<td></td>
<td>Ctrl + r</td>
<td>对使用 u 命令撤销的操作进行恢复</td>
</tr>
</tbody>
</table>

<h3 id="toc_7">查找与替换操作</h3>

<table>
<thead>
<tr>
<th>命令</th>
<th>光标操作</th>
<th>释意</th>
</tr>
</thead>

<tbody>
<tr>
<td>查找</td>
<td>/word</td>
<td>从上而下在文件中查找字符串“word”</td>
</tr>
<tr>
<td></td>
<td>?word</td>
<td>从下而上在文件中查找字符串“word”</td>
</tr>
<tr>
<td></td>
<td>n</td>
<td>定位下一个匹配的被查找字符串</td>
</tr>
<tr>
<td></td>
<td>N</td>
<td>定位上一个匹配的被查找字符串</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>替换</td>
<td>:s/old/new</td>
<td>将当前行中查找到的第一个字符“old” 串替换为“new”</td>
</tr>
<tr>
<td></td>
<td>:s/old/new/g</td>
<td>将当前行中查找到的所有字符串“old” 替换为“new”</td>
</tr>
<tr>
<td></td>
<td>:#,#s/old/new/g</td>
<td>在行号“#,#”范围内替换所有的字符串“old”为“new”</td>
</tr>
<tr>
<td></td>
<td>:%s/old/new/g</td>
<td>在整个文件范围内替换所有的字符串“old”为“new”</td>
</tr>
</tbody>
</table>

<h2 id="toc_8">简易配置</h2>

<p>输入 vim ~/.vimrc 该文件是一个隐藏文件,如果没有则 创建它,该文件中保存一些,vim 的常用配置。</p>

<pre><code>set nu //代码显示行号
syntax on //关键词高亮显示
set cindent //c 语法自动缩进
set autoindent //新行自动缩进
set shiftwidth=4 //缩进宽度 4
set tabstop=4 //tab 键宽度 4
set softtabstop=4 //制表符宽度 4
set nobackup //不备份
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在包含UITableView视图中添加单击手势]]></title>
    <link href="http://www.citynight.cn/Blog/14762437833792.html"/>
    <updated>2016-10-12T11:43:03+08:00</updated>
    <id>http://www.citynight.cn/Blog/14762437833792.html</id>
    <content type="html"><![CDATA[
<p>如果在包含UITableView视图中添加单击手势，这个单击手势会屏蔽掉UITableView的</p>

<pre><code>- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath;
</code></pre>

<p>可以利用<code>UIGestureRecognizer</code>的<code>Delegate</code>中的</p>

<pre><code>- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer *)gestureRecognizer;
</code></pre>

<p>在单击点位于UITableView内的时候取消响应</p>

<pre><code>- (BOOL)gestureRecognizerShouldBegin:(UIGestureRecognizer *)gestureRecognizer{
    CGPoint point = [gestureRecognizer locationInView:self];
    if(CGRectContainsPoint(menuTableView.frame, point)){
        return NO;
    }
    return YES;
}
</code></pre>

<p>或者将单击手势的cancelsTouchesInView设置为NO</p>

<pre><code>singleTap.cancelsTouchesInView = NO;
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[升级到Xcode8后Qt无法正常使用]]></title>
    <link href="http://www.citynight.cn/Blog/14761943627170.html"/>
    <updated>2016-10-11T21:59:22+08:00</updated>
    <id>http://www.citynight.cn/Blog/14761943627170.html</id>
    <content type="html"><![CDATA[
<p>错误信息:</p>

<blockquote>
<p>Project ERROR: Xcode not set up properly. You may need to confirm the license agreement by running /usr/bin/xcodebuild.</p>
</blockquote>

<p>解决办法:<br/>
<strong>&gt;= Xcode 8</strong></p>

<p>In Xcode 8, as Bruce said, this happens when Qt tries to find <code>xcrun</code> when it should be looking for <code>xcodebuild</code>.</p>

<p><strong>Step 1:</strong></p>

<p>Open the file:</p>

<pre><code>Qt_install_folder/5.7/clang_64/mkspecs/features/mac/default_pre.prf
</code></pre>

<p><strong>Step 2:</strong></p>

<p>Replace:</p>

<pre><code>isEmpty($$list($$system(&quot;/usr/bin/xcrun -find xcrun 2&gt;/dev/null&quot;)))
</code></pre>

<p>With:</p>

<pre><code>isEmpty($$list($$system(&quot;/usr/bin/xcrun -find xcodebuild 2&gt;/dev/null&quot;)))
</code></pre>

<p><strong>~&gt; Xcode 8</strong></p>

<p>Before Xcode 8, this problem occurs when command line tools are installed after Xcode is installed. What happens is the <code>Xcode-select</code> developer directory gets pointed to <code>/Library/Developer/CommandLineTools</code>.</p>

<p><strong>Step 1:</strong></p>

<p>Point <code>Xcode-select</code> to the correct Xcode Developer directory with the command:</p>

<pre><code>sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
</code></pre>

<p><strong>Step 2:</strong></p>

<p>Confirm the license agreement with the command:</p>

<pre><code>xcodebuild -license
</code></pre>

<p>This will prompt you to read through the license agreement.</p>

<p>Enter <code>agree</code> to accept the terms.</p>

<p>详见stackoverflow 中 <a href="http://stackoverflow.com/questions/33728905/qt-creator-project-error-xcode-not-set-up-properly-you-may-need-to-confirm-t">Qt Creator - Project ERROR: Xcode not set up properly. You may need to confirm the license agreement by running /usr/bin/xcodebuild</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[优秀文章链接收藏]]></title>
    <link href="http://www.citynight.cn/Blog/14760921807707.html"/>
    <updated>2016-10-10T17:36:20+08:00</updated>
    <id>http://www.citynight.cn/Blog/14760921807707.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">优化</h2>

<p><a href="http://www.mulle-kybernetik.com/artikel/Optimization/opti-3-imp-deluxe.html">极致优化</a></p>

<p>美团点评技术团队: <a href="http://tech.meituan.com/DiveIntoMethodCache.html">深入理解Objective-C：方法缓存</a></p>

<h2 id="toc_1">Runloop</h2>

<p><a href="http://blog.ibireme.com/2015/05/18/runloop/">深入理解RunLoop</a>  &mdash; 内部分享文章runloop中使用了该文章中的一张图.</p>

<h2 id="toc_2">GCD</h2>

<p><a href="http://www.raywenderlich.com/60749/grand-central-dispatch-in-depth-part-1">GCD 深入理解：第一部分</a> 中文翻译:<a href="https://github.com/nixzhu/dev-blog/blob/master/2014-04-19-grand-central-dispatch-in-depth-part-1.md">译文</a><br/>
<a href="https://github.com/nixzhu/dev-blog/blob/master/2014-05-14-grand-central-dispatch-in-depth-part-2.md">GCD 深入理解：第二部分</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[怎样让内存缓存变稳定]]></title>
    <link href="http://www.citynight.cn/Blog/14752152861722.html"/>
    <updated>2016-09-30T14:01:26+08:00</updated>
    <id>http://www.citynight.cn/Blog/14752152861722.html</id>
    <content type="html"><![CDATA[
<p>项目中如果显示图片比较多,会遇到内存涨的比较厉害,项目中用到 SDWebImage, 所以可以很简单的让内存缓存变稳定:</p>

<pre><code>-(void)scrollViewDidScroll:(UIScrollView *)scrollView {
    [[SDImageCache sharedImageCache] clearMemory];
}
</code></pre>

<p>原理:</p>

<pre><code>- (void)clearMemory {
    [self.memCache removeAllObjects];
}
</code></pre>

<p>_memCache 是 NSCache 类型的,</p>

<p>没有做任何操作的时候大概是这个样子的<br/>
<img src="media/14752152861722/14752174866625.jpg" alt=""/></p>

<p>添加clearMemory后:<br/>
<img src="media/14752152861722/14752177858503.jpg" alt=""/></p>

<p>这也是为什么滚动后屏幕上还显示图片的原因.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cocoapods的安装]]></title>
    <link href="http://www.citynight.cn/Blog/14751288042220.html"/>
    <updated>2016-09-29T14:00:04+08:00</updated>
    <id>http://www.citynight.cn/Blog/14751288042220.html</id>
    <content type="html"><![CDATA[
<pre><code>1.先升级Gem
    sudo gem update --system
2.切换cocoapods的数据源
    【先删除，再添加，查看】
    gem sources --remove https://rubygems.org/
    gem sources -a https://ruby.taobao.org/
    gem sources -l
3.安装cocoapods
    sudo gem install cocoapods
    或者（如10.11系统）sudo gem install -n /usr/local/bin cocoapods
4.(可忽略)将Podspec文件托管地址从github切换到国内的oschina
    【先删除，再添加，再更新】
    pod repo remove master
    pod repo add master http://git.oschina.net/akuandev/Specs.git
    pod repo add master https://gitcafe.com/akuandev/Specs.git
    pod repo update
5.设置pod仓库
    pod setup
6.测试
    【如果有版本号，则说明已经安装成功】
    pod --version
7.利用cocoapods来安装第三方框架
    01 进入要安装框架的项目的.xcodeproj同级文件夹
    02 在该文件夹中新建一个文件podfile
    03 在文件中告诉cocoapods需要安装的框架信息
        a.该框架支持的平台
        b.适用的iOS版本
        c.框架的名称
        d.框架的版本
8.安装
pod install --no-repo-update
pod update --no-repo-update

9.说明
platform :ios, &#39;8.0&#39; 用来设置所有第三方库所支持的iOS最低版本
pod &#39;SDWebImage&#39;,&#39;~&gt;2.6&#39; 设置框架的名称和版本号
版本号的规则：
&#39;&gt;1.0&#39;    可以安装任何高于1.0的版本
&#39;&gt;=1.0&#39;   可以安装任何高于或等于1.0的版本
&#39;&lt;1.0&#39;    任何低于1.0的版本
&#39;&lt;=1.0&#39;   任何低于或等于1.0的版本
&#39;~&gt;0.1&#39;   任何高于或等于0.1的版本，但是不包含高于1.0的版本
&#39;~&gt;0&#39;     任何版本，相当于不指定版本，默认采用最新版本号

10.使用pod install命令安装框架后的大致过程：
01 分析依赖:该步骤会分析Podfile,查看不同类库之间的依赖情况。如果有多个类库依赖于同一个类库，但是依赖于不同的版本，那么cocoaPods会自动设置一个兼容的版本。
02 下载依赖:根据分析依赖的结果，下载指定版本的类库到本地项目中。
03 生成Pods项目：创建一个Pods项目专门用来编译和管理第三方框架，CocoaPods会将所需的框架，库等内容添加到项目中，并且进行相应的配置。
04 整合Pods项目：将Pods和项目整合到一个工作空间中，并且设置文件链接。

</code></pre>

]]></content>
  </entry>
  
</feed>
